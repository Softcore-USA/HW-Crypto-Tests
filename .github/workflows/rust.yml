name: Rust Windows Build and Release

on:
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always


jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Build
      run: cargo build --release

    - name: Archive build
      run: |
        mkdir -p artifacts
        cp target/release/HW-Crypto-Tests.exe artifacts/

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: artifacts/HW-Crypto-Tests.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write 
      
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
        path: ./artifacts

    - name: Create GitHub Release
      id: create_release
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ github.ref }}
        token: ${{ secrets.GITHUB_TOKEN }}
        name: Release HW-Crypto-Tests - ${{ github.ref }}
        body: "Automated release by GitHub Actions."
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/HW-Crypto-Tests.exe
        asset_name: HW-Crypto-Tests.exe
        asset_content_type: application/octet-stream
